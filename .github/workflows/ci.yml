name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=15

    env:
      DB_HOST: 127.0.0.1
      DB_USER: terra_user
      DB_PASSWORD: securepass123
      DB_NAME: terragenesis_ai
      MYSQL_ROOT_PASSWORD: root
      # Retry/backoff for DB setup scripts
      SCHEMA_MAX_RETRIES: '15'
      SCHEMA_RETRY_DELAY_MS: '1000'
      SCHEMA_BACKOFF_FACTOR: '1.5'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if docker run --network host --rm mysql:8 bash -lc "mysqladmin ping -h 127.0.0.1 -uroot -proot"; then
              echo "MySQL is ready"; exit 0; fi; echo "Waiting for MySQL..."; sleep 2; done; exit 1

      - name: Create DB user and grant privileges
        run: node scripts/create_db_user_root.js
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}

      - name: Apply SQL schema
        run: node scripts/apply_schema_node.js
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          DB_HOST: ${{ env.DB_HOST }}

      - name: Verify schema (tables exist)
        run: node scripts/check_tables.js
        env:
          DB_HOST: ${{ env.DB_HOST }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_NAME: ${{ env.DB_NAME }}
          MIN_TABLES: '1'
          EXPECT_TABLES: 'users,land_parcels,ai_analysis,regeneration_plans'
          VALIDATE_SCHEMA: '1'

      - name: Run tests
        run: npm test --silent
